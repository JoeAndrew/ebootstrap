#!/bin/bash
# Copyright (c) 2015 Bruce Schultz <brulzki@gmail.com>
# Distributed under the terms of the GNU General Public License v2

# Author: Bruce Schultz <brulzki@gmail.com>

# Usage:
# ebootstrap CONFIG TARGET

EBOOTSTRAP_LIB=$(readlink -m ${0%/*})/lib

source ${EBOOTSTRAP_LIB}/ebootstrap-core.sh

usage() {
    n=${0##*/}
    cat <<EOF
Usage: ${n} [action] CONFIG TARGET

Actions: [ --info | --fetch | --unpack | --install | --config | --clean ]
EOF

[[ $1 == "--long" ]] && cat <<EOF
  --info
          Show the output from pkg_info()

  --fetch
          Fetch the source package

  --unpack
          Unpack the source packge into the TARGET directory

  --install (the default)
          Install the system defined in CONFIG to the TARGET directory

  --config
          Configure the system installed at TARGET
          This is the action defined in the pkg_config() section fo the ebuild

  --clean
          Clean the ebuild temporary files
EOF
}

load-global-config

case ${1} in
    --info|--fetch|--unpack|--install|--config|--clean)
	phase=${1##*-}
	shift
	;;
    --force)
        EBOOTSTRAP_FORCE=1
        shift
        ;;
    --help)
	usage --long
	exit 0
	;;
    --*)
	phase=${1##*-}
	ewarn "Trying unknown phase $phase"
	shift
	;;
esac

if [[ $# -lt 2 ]]; then
    usage
    exit -1
fi

# load the backend
if [[ -n "${EBOOTSTRAP_BACKEND}" ]]; then
    if [[ -f "${EBOOTSTRAP_LIB}/ebootstrap-backend-${EBOOTSTRAP_BACKEND}.sh" ]]; then
        source ${EBOOTSTRAP_LIB}/ebootstrap-backend-${EBOOTSTRAP_BACKEND}.sh
    else
        die "Failed to find backend for ${EBOOTSTRAP_BACKEND}"
    fi
else
    source ${EBOOTSTRAP_LIB}/ebootstrap-backend-default.sh
fi

# locate the target configuration file
config=$(find-config-file ${1})
[[ $? == 0 ]] || die "${0##*/}: there are no configs to satisfy \"${1}\""

EROOT=$(readlink -m ${2}) || die "readlink target failed"

phase=${phase:-install}

case $phase in
    info|fetch|unpack|clean)
        ;;
    install)
	einfo "Installing into $EROOT"
	;;
    config)
	einfo "Configuring: $EROOT"
	;;
    prepare|configure|compile|test)
	ewarn "Running ebuild phase $phase"
	;;
    *)
	ewarn "Trying unknown ebuild phase: $phase"
	;;
esac

ebootstrap-backend $phase $config || eerror "Backend failure: $phase $config"

# clean up the temporary build directory after successful install
if [[ $? -eq 0 && "${phase}" == "install" ]]; then
    einfo "Cleaning"
    ebootstrap-backend clean $config
fi
